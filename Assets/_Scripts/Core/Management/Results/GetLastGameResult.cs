using System;using Memory.Structs;using UnityEngine;namespace Core.Management{    public static partial class Main    {        public static void GetLastGameResult()        {            string typeString = Database.GetDatabaseString(key: DatabaseKeys.LastGameTypeDatabaseKey);            GameType type;            if (Enum.TryParse(value: typeString, ignoreCase: true, result: out type))            {                switch (type)                {                    case GameType.MEMORY:                        MemoryGameResult result = GetMemoryResult();                        Debug.Log(message: result.SecondsLeft);                        MemoryResultFound?.Invoke(obj: result);                        break;                    default:                        Debug.LogError(message: "INVALID LAST GAME TYPE");                        break;                }                Database.SetDatabaseString(key: DatabaseKeys.LastGameTypeDatabaseKey, value: string.Empty);            }            else            {                Debug.Log(message: "NO LAST GAME FOUND");            }        }    }}