using System;using Memory.Enums;using Memory.Logic;using UnityEngine;namespace Memory.UserInterface{    public class UserInterface : MonoBehaviour    {        [SerializeField]        private UI_TopBar _topBar;        [SerializeField]        private UI_EndGamePopup _endGamePopup;        private void Awake()        {            _endGamePopup.ReplayRequested += OnReplayRequested;            _endGamePopup.BackToMenuRequested += OnBackToMenuRequested;        }        private void OnEnable()        {            Game.TimeLeftChanged += OnTimeChanged;            Game.ProgressChanged += OnProgressChanged;            Game.GameFinished += OnGameFinished;        }        private void OnDisable()        {            Game.TimeLeftChanged -= OnTimeChanged;            Game.ProgressChanged -= OnProgressChanged;            Game.GameFinished -= OnGameFinished;        }        private void OnTimeChanged(TimeSpan timeLeft)        {            _topBar.OnTimeChanged(timeLeft: timeLeft);        }        private void OnProgressChanged(int current, int max)        {            _topBar.OnProgressChanged(current: current, max: max);        }        private void OnGameFinished(CompletenessType completeness)        {            _topBar.Hide();            if (completeness != CompletenessType.LOST)            {                _endGamePopup.gameObject.SetActive(true);                _endGamePopup.SetResult(completeness);            }        }        private void OnReplayRequested()        {            Core.Audio.PlaySound(Core.Enums.AudioType.BUTTON_UI);            Game.OnReplay();        }        private void OnBackToMenuRequested()        {            Core.Audio.PlaySound(Core.Enums.AudioType.BUTTON_UI);            Game.OnBackToMenu();        }    }}